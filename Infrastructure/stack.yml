version: "3.9"

networks:
  edge: { driver: overlay }
  app:  { driver: overlay }

configs:
  nginx_conf_v24:
    file: ./nginx.conf

services:
  lb:
    image: nginx:alpine
    configs:
      - source: nginx_conf_v24
        target: /etc/nginx/nginx.conf
    ports: ["8080:80"]
    networks: [edge, app]
    deploy: { replicas: 1 }

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672"
    networks: [ app ]
    deploy: { replicas: 1 }

  jaeger:
    image: jaegertracing/all-in-one:1.53
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
    networks: [ app ]
    deploy: { replicas: 1 }

  redis:
    image: redis:7-alpine
    networks: [ app ]
    deploy: { replicas: 1 }
  
  comment-cache:
    image: redis:7-alpine
    command: [ "redis-server",
               "--save", "",
               "--appendonly", "no",
               "--maxmemory", "64mb",
               "--maxmemory-policy", "allkeys-lru" ]
    networks: [ app ]
    deploy: { replicas: 1 }

  frontend:
    image: hhnews/frontend:1.2
    networks: [ app ]
    deploy: { replicas: 1 }
    
  article-cache:
    image: redis:7-alpine
    networks: [ app ]
    deploy: { replicas: 1 }

  comment-service:
    image: hhnews/commentservice:1.9
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      COMMENTS_DB: "Host=host.docker.internal;Port=5435;Database=comments;Username=postgres;Password=1234"
      REDIS_URL: "comment-cache:6379"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger:4317"
    networks: [ app ]
    deploy: { replicas: 1 }

  newsletter-service:
    image: hhnews/newslettersvc:1.0
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger:4317"
    networks: [ app ]
    deploy: { replicas: 1 }

  publisher-service:
    image: hhnews/publishersvc:1.1
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger:4317"
    networks: [ app ]
    deploy: { replicas: 1 }

  article-service:
    image: hhnews/articlesvc:1.6
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ARTICLE_CACHE: "article-cache:6379"
      ConnectionStrings__AF:     "Host=host.docker.internal;Port=5435;Database=news_af;Username=postgres;Password=1234"
      ConnectionStrings__AN:     "Host=host.docker.internal;Port=5435;Database=news_an;Username=postgres;Password=1234"
      ConnectionStrings__AS:     "Host=host.docker.internal;Port=5435;Database=news_as;Username=postgres;Password=1234"
      ConnectionStrings__EU:     "Host=host.docker.internal;Port=5435;Database=news_eu;Username=postgres;Password=1234"
      ConnectionStrings__NA:     "Host=host.docker.internal;Port=5435;Database=news_na;Username=postgres;Password=1234"
      ConnectionStrings__OC:     "Host=host.docker.internal;Port=5435;Database=news_oc;Username=postgres;Password=1234"
      ConnectionStrings__SA:     "Host=host.docker.internal;Port=5435;Database=news_sa;Username=postgres;Password=1234"
      ConnectionStrings__GLOBAL: "Host=host.docker.internal;Port=5435;Database=news_global;Username=postgres;Password=1234"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger:4317"
    networks: [app]
    deploy:
      replicas: 3
      restart_policy: { condition: on-failure }
      update_config: { order: start-first, parallelism: 1, delay: 5s }
